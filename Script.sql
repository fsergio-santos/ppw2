--DROP TABLE ALUNO_AVALIACAO;

DROP TABLE PERMISSIONS CASCADE CONSTRAINTS PURGE;
DROP TABLE ROLE CASCADE CONSTRAINTS PURGE;
DROP TABLE USUARIO_ROLE CASCADE CONSTRAINTS PURGE;
DROP TABLE RECURSO CASCADE CONSTRAINTS PURGE;
DROP TABLE ALUNO_AVALIACAO CONSTRAINTS PURGE;
DROP TABLE AVALIACAO CASCADE CONSTRAINTS PURGE;
DROP TABLE ALUNO_DISCIPLINA CASCADE CONSTRAINTS PURGE;
DROP TABLE DISCIPLINA CASCADE CONSTRAINTS PURGE;
DROP TABLE PROFESSOR CASCADE CONSTRAINTS PURGE;
DROP TABLE ALUNO CASCADE CONSTRAINTS PURGE;
DROP TABLE USUARIO CASCADE CONSTRAINTS PURGE;
DROP TABLE CIDADE CASCADE CONSTRAINTS PURGE;



-- TABELA DE DADOS 

CREATE TABLE CIDADE (
	ID_CIDADE NUMBER GENERATED BY DEFAULT AS IDENTITY NOT NULL CONSTRAINT PK_CIDADE PRIMARY KEY,
    COD_CIDADE VARCHAR2(10) UNIQUE NOT NULL,
    NOME_CIDADE VARCHAR2(50),
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE USUARIO (
    ID_USUARIO NUMBER GENERATED BY DEFAULT AS IDENTITY NOT NULL CONSTRAINT PK_USUARIO PRIMARY KEY,
    COD_USUARIO VARCHAR2(10) UNIQUE NOT NULL,
    NOME_USUARIO VARCHAR2(50),
    EMAIL VARCHAR2(100),
    SENHA VARCHAR2(100),
    FOTO VARCHAR2(200),
    TIPO NUMBER DEFAULT 1 NOT NULL, --1(PROFESSOR), 2(ALUNO)
    ID_CIDADE NUMBER NOT NULL,
    CONSTRAINT FK_USUARIO_CIDADE FOREIGN KEY (ID_CIDADE) REFERENCES CIDADE,
    ATIVO NUMBER DEFAULT 1,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);  

CREATE TABLE ALUNO (
    ID_ALUNO NUMBER GENERATED BY DEFAULT AS IDENTITY NOT NULL CONSTRAINT PK_ALUNO PRIMARY KEY,
    COD_ALUNO VARCHAR2(10) UNIQUE NOT NULL,
    NOME_ALUNO VARCHAR2(50),
    IDADE NUMBER,
    ID_USUARIO NUMBER NOT NULL,
       CONSTRAINT FK_ALUNO_USUARIO FOREIGN KEY (ID_USUARIO) REFERENCES USUARIO,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
); 

CREATE TABLE PROFESSOR (
    ID_PROFESSOR NUMBER GENERATED BY DEFAULT AS IDENTITY NOT NULL CONSTRAINT  PK_PROFESSOR PRIMARY KEY,
    COD_PROFESSOR VARCHAR2(10) UNIQUE NOT NULL,
    NOME_PROFESSOR VARCHAR2(50),
    ID_USUARIO NUMBER NOT NULL,
       CONSTRAINT FK_PROFESSOR_USUARIO FOREIGN KEY (ID_USUARIO) REFERENCES USUARIO,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
); 


CREATE TABLE DISCIPLINA (
    ID_DISCIPLINA NUMBER GENERATED BY DEFAULT AS IDENTITY NOT NULL CONSTRAINT PK_DISCIPLINA PRIMARY KEY,
    PERIODO NUMBER NOT NULL,
    NOME_DISCIPLINA VARCHAR2(50),
    ID_PROFESSOR NUMBER, 
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT FK_DISCIPLINA_PROFESSOR FOREIGN KEY (ID_PROFESSOR) REFERENCES PROFESSOR(ID_PROFESSOR)
);


CREATE TABLE ALUNO_DISCIPLINA (
    DISCIPLINA_ID NUMBER NOT NULL,
    ALUNO_ID NUMBER NOT NULL,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (DISCIPLINA_ID, ALUNO_ID),
    CONSTRAINT FK_ALUNO_DISCIPLINA_DISCIPLINA FOREIGN KEY (DISCIPLINA_ID) REFERENCES DISCIPLINA (ID_DISCIPLINA),
    CONSTRAINT FK_ALUNO_DISSCIPLINA_ALUNO FOREIGN KEY (ALUNO_ID) REFERENCES ALUNO(ID_ALUNO)
);



CREATE TABLE AVALIACAO (
    ID_AVALIACAO NUMBER GENERATED BY DEFAULT AS IDENTITY NOT NULL CONSTRAINT PK_AVALIACAO PRIMARY KEY,
    DESCRICAO  VARCHAR2(100),
    DISCIPLINA_ID NUMBER NOT NULL,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT FK_AVALIACAO_DISCIPLINA FOREIGN KEY (DISCIPLINA_ID) REFERENCES DISCIPLINA (ID_DISCIPLINA)
);


CREATE TABLE ALUNO_AVALIACAO (
    ALUNO_ID NUMBER,
    AVALIACAO_ID NUMBER,
    NOTA DECIMAL(4, 2), 
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (ALUNO_ID, AVALIACAO_ID),
    CONSTRAINT FK_ALUNO FOREIGN KEY (ALUNO_ID) REFERENCES ALUNO(ID_ALUNO),
    CONSTRAINT FK_AVALIACAO FOREIGN KEY (AVALIACAO_ID) REFERENCES AVALIACAO(ID_AVALIACAO)
);

-- TABELA PARA IMPLEMENTAÇÃO DA TÉCNICA RBAC

CREATE TABLE ROLE (
    ID_ROLE NUMBER GENERATED BY DEFAULT AS IDENTITY NOT NULL CONSTRAINT PK_ROLE PRIMARY KEY,
    NOME_ROLE VARCHAR2(50) UNIQUE NOT NULL,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE USUARIO_ROLE (
    USUARIO_ID NUMBER NOT NULL,
    ROLE_ID NUMBER NOT NULL,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (USUARIO_ID, ROLE_ID),
    CONSTRAINT FK_USUARIO_ROLE_USUARIO FOREIGN KEY (USUARIO_ID) REFERENCES USUARIO(ID_USUARIO),
    CONSTRAINT FK_USUARIO_ROLE_ROLE FOREIGN KEY (ROLE_ID) REFERENCES ROLE(ID_ROLE)
);

CREATE TABLE RECURSO (
    ID_RECURSO NUMBER GENERATED BY DEFAULT AS IDENTITY NOT NULL CONSTRAINT PK_RECURSO PRIMARY KEY,
    NOME_RECURSO VARCHAR2(100) UNIQUE NOT NULL,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE PERMISSIONS (
    ID_PERMISSION NUMBER GENERATED BY DEFAULT AS IDENTITY NOT NULL CONSTRAINT PK_PERMISSIONS PRIMARY KEY,
    ROLE_ID NUMBER NOT NULL,
    RECURSO_ID NUMBER NOT NULL,
    ACTION VARCHAR2(20) NOT NULL,       -- CREATE, READ, UPDATE, DELETE
    POSSESSION VARCHAR2(20) NOT NULL,   -- OWN ou ANY
    ATTRIBUTES VARCHAR2(4000),          -- atributos permitidos (separados por vírgula)
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT FK_PERMISSIONS_ROLE FOREIGN KEY (ROLE_ID) REFERENCES ROLE(ID_ROLE),
    CONSTRAINT FK_PERMISSIONS_RECURSO FOREIGN KEY (RECURSO_ID) REFERENCES RECURSO(ID_RECURSO)
);

-- purge recyclebin; --> 




INSERT ALL
  INTO CIDADE (COD_CIDADE, NOME_CIDADE) VALUES ('C001', 'São Paulo')
  INTO CIDADE (COD_CIDADE, NOME_CIDADE) VALUES ('C002', 'Rio de Janeiro')
  INTO CIDADE (COD_CIDADE, NOME_CIDADE) VALUES ('C003', 'Belo Horizonte')
  INTO CIDADE (COD_CIDADE, NOME_CIDADE) VALUES ('C004', 'Curitiba')
  INTO CIDADE (COD_CIDADE, NOME_CIDADE) VALUES ('C005', 'Porto Alegre')
  INTO CIDADE (COD_CIDADE, NOME_CIDADE) VALUES ('C006', 'Recife')
  INTO CIDADE (COD_CIDADE, NOME_CIDADE) VALUES ('C007', 'Salvador')
  INTO CIDADE (COD_CIDADE, NOME_CIDADE) VALUES ('C008', 'Fortaleza')
  INTO CIDADE (COD_CIDADE, NOME_CIDADE) VALUES ('C009', 'Manaus')
  INTO CIDADE (COD_CIDADE, NOME_CIDADE) VALUES ('C010', 'Goiânia')
SELECT * FROM dual;



-- Professores
INSERT INTO USUARIO (COD_USUARIO, NOME_USUARIO, EMAIL, SENHA, TIPO, ID_CIDADE)
VALUES ('U001', 'Carlos Silva', 'carlos.silva@uni.com', '1234', 1, 1);

INSERT INTO USUARIO (COD_USUARIO, NOME_USUARIO, EMAIL, SENHA, TIPO, ID_CIDADE)
VALUES ('U002', 'Mariana Souza', 'mariana.souza@uni.com', '1234', 1, 2);

-- Alunos
INSERT INTO USUARIO (COD_USUARIO, NOME_USUARIO, EMAIL, SENHA, TIPO, ID_CIDADE)
VALUES ('U003', 'João Pereira', 'joao.pereira@uni.com', '1234', 2, 3);

INSERT INTO USUARIO (COD_USUARIO, NOME_USUARIO, EMAIL, SENHA, TIPO, ID_CIDADE)
VALUES ('U004', 'Ana Costa', 'ana.costa@uni.com', '1234', 2, 4);

INSERT INTO USUARIO (COD_USUARIO, NOME_USUARIO, EMAIL, SENHA, TIPO, ID_CIDADE)
VALUES ('U005', 'Lucas Oliveira', 'lucas.oliveira@uni.com', '1234', 2, 5);

INSERT INTO USUARIO (COD_USUARIO, NOME_USUARIO, EMAIL, SENHA, FOTO, TIPO, ID_CIDADE)
VALUES ('U001', 'Carlos Professor', 'carlos.prof@example.com', '1234', NULL, 1, 1);

INSERT INTO USUARIO (COD_USUARIO, NOME_USUARIO, EMAIL, SENHA, FOTO, TIPO, ID_CIDADE)
VALUES ('U002', 'Mariana Professora', 'mariana.prof@example.com', '1234', NULL, 1, 2);

INSERT INTO USUARIO (COD_USUARIO, NOME_USUARIO, EMAIL, SENHA, FOTO, TIPO, ID_CIDADE)
VALUES ('U003', 'Rafael Docente', 'rafael.docente@example.com', '1234', NULL, 1, 3);

INSERT INTO USUARIO (COD_USUARIO, NOME_USUARIO, EMAIL, SENHA, FOTO, TIPO, ID_CIDADE)
VALUES ('U004', 'Fernanda Mestre', 'fernanda.mestre@example.com', '1234', NULL, 1, 4);

INSERT INTO USUARIO (COD_USUARIO, NOME_USUARIO, EMAIL, SENHA, FOTO, TIPO, ID_CIDADE)
VALUES ('U005', 'Eduardo Instrutor', 'edu.instrutor@example.com', '1234', NULL, 1, 5);

-- Alunos
INSERT INTO USUARIO (COD_USUARIO, NOME_USUARIO, EMAIL, SENHA, FOTO, TIPO, ID_CIDADE)
VALUES ('U006', 'João Aluno', 'joao.aluno@example.com', '1234', NULL, 2, 6);

INSERT INTO USUARIO (COD_USUARIO, NOME_USUARIO, EMAIL, SENHA, FOTO, TIPO, ID_CIDADE)
VALUES ('U007', 'Ana Aluna', 'ana.aluna@example.com', '1234', NULL, 2, 7);

INSERT INTO USUARIO (COD_USUARIO, NOME_USUARIO, EMAIL, SENHA, FOTO, TIPO, ID_CIDADE)
VALUES ('U008', 'Pedro Estudante', 'pedro.estudante@example.com', '1234', NULL, 2, 8);

INSERT INTO USUARIO (COD_USUARIO, NOME_USUARIO, EMAIL, SENHA, FOTO, TIPO, ID_CIDADE)
VALUES ('U009', 'Larissa Universitária', 'larissa.uni@example.com', '1234', NULL, 2, 9);

INSERT INTO USUARIO (COD_USUARIO, NOME_USUARIO, EMAIL, SENHA, FOTO, TIPO, ID_CIDADE)
VALUES ('U010', 'Gabriel Discente', 'gabriel.discente@example.com', '1234', NULL, 2, 10);

INSERT INTO USUARIO (COD_USUARIO, NOME_USUARIO, EMAIL, SENHA, FOTO, TIPO, ID_CIDADE)
VALUES ('U011', 'Camila Aprendiz', 'camila.aprendiz@example.com', '1234', NULL, 2, 11);

INSERT INTO USUARIO (COD_USUARIO, NOME_USUARIO, EMAIL, SENHA, FOTO, TIPO, ID_CIDADE)
VALUES ('U012', 'Rodrigo Estudante', 'rodrigo.estudante@example.com', '1234', NULL, 2, 12);

INSERT INTO USUARIO (COD_USUARIO, NOME_USUARIO, EMAIL, SENHA, FOTO, TIPO, ID_CIDADE)
VALUES ('U013', 'Beatriz Aluna', 'beatriz.aluna@example.com', '1234', NULL, 2, 13);

INSERT INTO USUARIO (COD_USUARIO, NOME_USUARIO, EMAIL, SENHA, FOTO, TIPO, ID_CIDADE)
VALUES ('U014', 'Felipe Discente', 'felipe.discente@example.com', '1234', NULL, 2, 14);

INSERT INTO USUARIO (COD_USUARIO, NOME_USUARIO, EMAIL, SENHA, FOTO, TIPO, ID_CIDADE)
VALUES ('U015', 'Isabela Estudante', 'isabela.estudante@example.com', '1234', NULL, 2, 14);


INSERT INTO PROFESSOR (COD_PROFESSOR, NOME_PROFESSOR, ID_USUARIO)
VALUES ('P001', 'Carlos Professor', 1);

INSERT INTO PROFESSOR (COD_PROFESSOR, NOME_PROFESSOR, ID_USUARIO)
VALUES ('P002', 'Mariana Professora', 2);


INSERT INTO ALUNO (COD_ALUNO, NOME_ALUNO, IDADE, ID_USUARIO)
VALUES ('A001', 'João Aluno', 20, 3);

INSERT INTO ALUNO (COD_ALUNO, NOME_ALUNO, IDADE, ID_USUARIO)
VALUES ('A002', 'Ana Aluna', 22, 4);


INSERT INTO DISCIPLINA (PERIODO, NOME_DISCIPLINA, ID_PROFESSOR)
VALUES (1, 'Banco de Dados', 1);

INSERT INTO DISCIPLINA (PERIODO, NOME_DISCIPLINA, ID_PROFESSOR)
VALUES (1, 'Estrutura de Dados', 2);

INSERT INTO DISCIPLINA (PERIODO, NOME_DISCIPLINA, ID_PROFESSOR)
VALUES (2, 'Inteligência Artificial', 1);

-- João Pereira matriculado em Banco de Dados e IA
INSERT INTO ALUNO_DISCIPLINA (DISCIPLINA_ID, ALUNO_ID) VALUES (1, 1);
INSERT INTO ALUNO_DISCIPLINA (DISCIPLINA_ID, ALUNO_ID) VALUES (3, 1);

-- Ana Costa matriculada em Estrutura de Dados
INSERT INTO ALUNO_DISCIPLINA (DISCIPLINA_ID, ALUNO_ID) VALUES (2, 2);

-- Lucas Oliveira matriculado em Banco de Dados
INSERT INTO ALUNO_DISCIPLINA (DISCIPLINA_ID, ALUNO_ID) VALUES (1, 3);

INSERT INTO AVALIACAO (DESCRICAO, DISCIPLINA_ID)
VALUES ('Prova 1 - Banco de Dados', 1);

INSERT INTO AVALIACAO (DESCRICAO, DISCIPLINA_ID)
VALUES ('Prova 1 - Estrutura de Dados', 2);

INSERT INTO AVALIACAO (DESCRICAO, DISCIPLINA_ID)
VALUES ('Trabalho - Inteligência Artificial', 3);


-- João nas provas
INSERT INTO ALUNO_AVALIACAO (ALUNO_ID, AVALIACAO_ID, NOTA) VALUES (1, 1, 8.5);
INSERT INTO ALUNO_AVALIACAO (ALUNO_ID, AVALIACAO_ID, NOTA) VALUES (1, 3, 9.0);

-- Ana nas provas
INSERT INTO ALUNO_AVALIACAO (ALUNO_ID, AVALIACAO_ID, NOTA) VALUES (2, 2, 7.5);

-- Lucas em BD
INSERT INTO ALUNO_AVALIACAO (ALUNO_ID, AVALIACAO_ID, NOTA) VALUES (3, 1, 6.8);


INSERT INTO ROLE (NOME_ROLE) VALUES ('ADMIN');
INSERT INTO ROLE (NOME_ROLE) VALUES ('PROFESSOR');
INSERT INTO ROLE (NOME_ROLE) VALUES ('ALUNO');




-- Carlos Professor é ADMIN e PROFESSOR
INSERT INTO USUARIO_ROLE (USUARIO_ID, ROLE_ID) VALUES (1, 1);
INSERT INTO USUARIO_ROLE (USUARIO_ID, ROLE_ID) VALUES (1, 2);

-- Mariana Professora é PROFESSORA
INSERT INTO USUARIO_ROLE (USUARIO_ID, ROLE_ID) VALUES (2, 2);

-- João Aluno é ALUNO
INSERT INTO USUARIO_ROLE (USUARIO_ID, ROLE_ID) VALUES (3, 3);

-- Ana Aluna é ALUNA
INSERT INTO USUARIO_ROLE (USUARIO_ID, ROLE_ID) VALUES (4, 3);


INSERT INTO RECURSO (NOME_RECURSO) VALUES ('USUARIOS');
INSERT INTO RECURSO (NOME_RECURSO) VALUES ('ALUNOS');
INSERT INTO RECURSO (NOME_RECURSO) VALUES ('PROFESSORES');
INSERT INTO RECURSO (NOME_RECURSO) VALUES ('CIDADES');


-- ADMIN pode tudo em USUARIOS
INSERT INTO PERMISSIONS (ROLE_ID, RECURSO_ID, ACTION, POSSESSION, ATTRIBUTES)
VALUES (1, 1, 'CREATE', 'ANY', '*');
INSERT INTO PERMISSIONS (ROLE_ID, RECURSO_ID, ACTION, POSSESSION, ATTRIBUTES)
VALUES (1, 1, 'READ', 'ANY', '*');
INSERT INTO PERMISSIONS (ROLE_ID, RECURSO_ID, ACTION, POSSESSION, ATTRIBUTES)
VALUES (1, 1, 'UPDATE', 'ANY', '*');
INSERT INTO PERMISSIONS (ROLE_ID, RECURSO_ID, ACTION, POSSESSION, ATTRIBUTES)
VALUES (1, 1, 'DELETE', 'ANY', '*');

-- PROFESSOR pode ler e atualizar somente seus próprios dados
INSERT INTO PERMISSIONS (ROLE_ID, RECURSO_ID, ACTION, POSSESSION, ATTRIBUTES)
VALUES (2, 3, 'READ', 'OWN', 'NOME_PROFESSOR,ID_USUARIO');
INSERT INTO PERMISSIONS (ROLE_ID, RECURSO_ID, ACTION, POSSESSION, ATTRIBUTES)
VALUES (2, 3, 'UPDATE', 'OWN', 'NOME_PROFESSOR');

-- ALUNO pode ler seus próprios dados
INSERT INTO PERMISSIONS (ROLE_ID, RECURSO_ID, ACTION, POSSESSION, ATTRIBUTES)
VALUES (3, 2, 'READ', 'OWN', 'NOME_ALUNO,IDADE')
